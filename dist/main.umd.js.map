{"version":3,"file":"main.umd.js","sources":["../src/index.js"],"sourcesContent":["'use strict';\n\nconst lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\nlet reverseLookup = new Uint8Array(256);\n\nfor (let i = 0; i < lookup.length; i++) {\n  reverseLookup[lookup.charCodeAt(i)] = i;\n}\n\nconst base64urlRegex = /^([0-9a-zA-Z\\-_]{4})*([0-9a-zA-Z\\-_]{3}=?)?$/;\n\n/**\n * Decode a base64url string to an ArrayBuffer.\n * @param {string} base64url - The base64url string to decode.\n * @param {boolean} dontValidate - Disable validation.\n * @returns {ArrayBuffer} - The decoded ArrayBuffer.\n * @throws {Error} - If the base64url string is invalid.\n */\nexport function decode(base64url, dontValidate) {\n  if (!dontValidate && !base64urlRegex.test(base64url)) {\n    throw new Error('Invalid base64url string');\n  }\n\n  const base64urlLength = base64url.length;\n\n  const placeHolderLength = base64url.charAt(base64urlLength - 2) === '=' ? 2 : base64url.charAt(base64urlLength - 1) === '=' ? 1 : 0;\n  const bufferLength = (base64urlLength * 3) / 4 - placeHolderLength;\n\n  let arrayBuffer = new ArrayBuffer(bufferLength);\n  let uint8Array = new Uint8Array(arrayBuffer);\n\n  let j = 0;\n  for (let i = 0; i < base64urlLength; i += 4) {\n    let tmp0 = reverseLookup[base64url.charCodeAt(i)];\n    let tmp1 = reverseLookup[base64url.charCodeAt(i + 1)];\n    let tmp2 = reverseLookup[base64url.charCodeAt(i + 2)];\n    let tmp3 = reverseLookup[base64url.charCodeAt(i + 3)];\n\n    uint8Array[j++] = (tmp0 << 2) | (tmp1 >> 4);\n    uint8Array[j++] = ((tmp1 & 15) << 4) | (tmp2 >> 2);\n    uint8Array[j++] = ((tmp2 & 3) << 6) | (tmp3 & 63);\n  }\n\n  return arrayBuffer;\n}\n\n/**\n * Encode an ArrayBuffer to a base64url string.\n * @param {ArrayBuffer} arrayBuffer - The ArrayBuffer to encode.\n * @returns {string} - The encoded base64url string.\n */\nexport function encode(arrayBuffer) {\n  let uint8Array = new Uint8Array(arrayBuffer);\n  const length = uint8Array.length;\n  let base64url = '';\n\n  for (let i = 0; i < length; i += 3) {\n    base64url += lookup[uint8Array[i] >> 2];\n    base64url += lookup[((uint8Array[i] & 3) << 4) | (uint8Array[i + 1] >> 4)];\n    base64url += lookup[((uint8Array[i + 1] & 15) << 2) | (uint8Array[i + 2] >> 6)];\n    base64url += lookup[uint8Array[i + 2] & 63];\n  }\n\n  switch (length % 3) {\n    case 1:\n      base64url = base64url.substring(0, base64url.length - 2);\n      break;\n    case 2:\n      base64url = base64url.substring(0, base64url.length - 1);\n      break;\n  }\n  return base64url;\n}\n\n/**\n * Convert an ArrayBuffer to a string.\n * @param {ArrayBuffer} arrayBuffer - The ArrayBuffer to convert.\n * @returns {string} - The converted string.\n */\nexport function arrayBufferToString(arrayBuffer) {\n  return new TextDecoder().decode(arrayBuffer);\n}\n\n/**\n * Convert a string to an ArrayBuffer.\n * @param {string} str - The string to convert.\n * @returns {ArrayBuffer} - The converted ArrayBuffer.\n */\nexport function stringToArrayBuffer(str) {\n  const encoder = new TextEncoder();\n  return encoder.encode(str).buffer;\n}\n"],"names":["lookup","reverseLookup","Uint8Array","i","charCodeAt","base64urlRegex","arrayBuffer","TextDecoder","decode","base64url","dontValidate","test","Error","base64urlLength","length","placeHolderLength","charAt","ArrayBuffer","uint8Array","j","tmp0","tmp1","tmp2","tmp3","substring","str","TextEncoder","encode","buffer"],"mappings":"iPAEA,MAAMA,EAAS,mEACf,IAAIC,EAAgB,IAAIC,WAAW,KAEnC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,GAAeG,IACjCF,EAAcD,EAAOI,WAAWD,IAAMA,EAGxC,MAAME,EAAiB,qEAsEhB,SAA6BC,GAClC,OAAO,IAAIC,aAAcC,OAAOF,EAClC,WA/DO,SAAgBG,EAAWC,GAChC,IAAKA,IAAiBL,EAAeM,KAAKF,GACxC,MAAM,IAAIG,MAAM,4BAGlB,MAAMC,EAAkBJ,EAAUK,OAE5BC,EAA8D,MAA1CN,EAAUO,OAAOH,EAAkB,GAAa,EAA8C,MAA1CJ,EAAUO,OAAOH,EAAkB,GAAa,EAAI,EAGlI,IAAIP,EAAc,IAAIW,YAFkB,EAAlBJ,EAAuB,EAAIE,GAG7CG,EAAa,IAAIhB,WAAWI,GAE5Ba,EAAI,EACR,IAAK,IAAIhB,EAAI,EAAGA,EAAIU,EAAiBV,GAAK,EAAG,CAC3C,IAAIiB,EAAOnB,EAAcQ,EAAUL,WAAWD,IAC1CkB,EAAOpB,EAAcQ,EAAUL,WAAWD,EAAI,IAC9CmB,EAAOrB,EAAcQ,EAAUL,WAAWD,EAAI,IAC9CoB,EAAOtB,EAAcQ,EAAUL,WAAWD,EAAI,IAElDe,EAAWC,KAAQC,GAAQ,EAAMC,GAAQ,EACzCH,EAAWC,MAAgB,GAAPE,IAAc,EAAMC,GAAQ,EAChDJ,EAAWC,MAAgB,EAAPG,IAAa,EAAa,GAAPC,CACxC,CAED,OAAOjB,CACT,WAOO,SAAgBA,GACrB,IAAIY,EAAa,IAAIhB,WAAWI,GAChC,MAAMQ,EAASI,EAAWJ,OAC1B,IAAIL,EAAY,GAEhB,IAAK,IAAIN,EAAI,EAAGA,EAAIW,EAAQX,GAAK,EAC/BM,GAAaT,EAAOkB,EAAWf,IAAM,GACrCM,GAAaT,GAAyB,EAAhBkB,EAAWf,KAAW,EAAMe,EAAWf,EAAI,IAAM,GACvEM,GAAaT,GAA6B,GAApBkB,EAAWf,EAAI,KAAY,EAAMe,EAAWf,EAAI,IAAM,GAC5EM,GAAaT,EAA2B,GAApBkB,EAAWf,EAAI,IAGrC,OAAQW,EAAS,GACf,KAAK,EACHL,EAAYA,EAAUe,UAAU,EAAGf,EAAUK,OAAS,GACtD,MACF,KAAK,EACHL,EAAYA,EAAUe,UAAU,EAAGf,EAAUK,OAAS,GAG1D,OAAOL,CACT,wBAgBO,SAA6BgB,GAElC,OADgB,IAAIC,aACLC,OAAOF,GAAKG,MAC7B"}